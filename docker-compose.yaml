services:
  web:
    build: .
    command: sh -c "python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    depends_on:
      - web
    networks:
      - backend

  db:
    image: postgres:16.0
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    hostname: db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "5433:5432"
    networks:
      - backend

  redis:
    image: redis:7-alpine
    hostname: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - redis_data:/data
    env_file:
      - .env
    networks:
      - backend


networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  redis_data:

